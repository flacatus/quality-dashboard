// Code generated by ent, DO NOT EDIT.

package plugins

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the plugins type in the database.
	Label = "plugins"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCategory holds the string denoting the category field in the database.
	FieldCategory = "category"
	// FieldLogo holds the string denoting the logo field in the database.
	FieldLogo = "logo"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// Table holds the table name of the plugins in the database.
	Table = "plugins"
)

// Columns holds all SQL columns for plugins fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCategory,
	FieldLogo,
	FieldDescription,
	FieldStatus,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "plugins"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"teams_plugins",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	CategoryValidator func(string) error
	// LogoValidator is a validator for the "logo" field. It is called by the builders before save.
	LogoValidator func(string) error
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
